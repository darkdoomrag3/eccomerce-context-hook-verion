{"ast":null,"code":"var _jsxFileName = \"D:\\\\React fullstack video\\\\ecommerce hook\\\\src\\\\components\\\\card-dropdown\\\\card-dropdown.component.jsx\";\nimport React, { createContext, useContext } from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './card-dropdown.style.scss';\nimport CartItem from '../cart-item/cart-item.component';\nimport { withRouter } from 'react-router-dom';\nimport { selectCartItemCount, selectCartItems } from '../../redux/cart/cart.selector';\nimport { toggleCartHidden } from '../../redux/cart/cart.action';\nimport { CartContext } from '../../provider/cart/cart.provider';\n\nconst CardDropDown = ({\n  history\n}) => {\n  const _useContext = useContext(CartContext),\n        cartItems = _useContext.cartItems,\n        toggleHidden = _useContext.toggleHidden;\n\n  return React.createElement(\"div\", {\n    className: \"cart-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n    key: cartItem.id,\n    item: cartItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })) : React.createElement(\"span\", {\n    className: \"empty-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Your cart is empty\")), React.createElement(CustomButton, {\n    onClick: () => {\n      history.push('/chekout');\n      toggleHidden();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"GO TO CHECKOUT\"));\n};\n\nexport default withRouter(CardDropDown);","map":{"version":3,"sources":["D:/React fullstack video/ecommerce hook/src/components/card-dropdown/card-dropdown.component.jsx"],"names":["React","createContext","useContext","CustomButton","CartItem","withRouter","selectCartItemCount","selectCartItems","toggleCartHidden","CartContext","CardDropDown","history","cartItems","toggleHidden","length","map","cartItem","id","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAO,4BAAP;AACA,OAAOC,QAAP,MAAqB,kCAArB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,mBAAT,EAA8BC,eAA9B,QAAqD,gCAArD;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,WAAT,QAA4B,mCAA5B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA,sBAEHT,UAAU,CAACO,WAAD,CAFP;AAAA,QAE3BG,SAF2B,eAE3BA,SAF2B;AAAA,QAEjBC,YAFiB,eAEjBA,YAFiB;;AAIlC,SACK;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,SAAS,CAACE,MAAV,GACGF,SAAS,CAACG,GAAV,CAAcC,QAAQ,IAClB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,GAKO;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANZ,CADJ,EAUI,oBAAC,YAAD;AACI,IAAA,OAAO,EAAE,MAAM;AACXL,MAAAA,OAAO,CAACO,IAAR,CAAa,UAAb;AACAL,MAAAA,YAAY;AACf,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ,CADL;AAqBF,CAzBD;;AA2BA,eAAeR,UAAU,CAACK,YAAD,CAAzB","sourcesContent":["import React, { createContext, useContext } from 'react'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport './card-dropdown.style.scss';\r\nimport CartItem from '../cart-item/cart-item.component';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { selectCartItemCount, selectCartItems } from '../../redux/cart/cart.selector';\r\nimport { toggleCartHidden } from '../../redux/cart/cart.action';\r\nimport { CartContext } from '../../provider/cart/cart.provider';\r\n\r\nconst CardDropDown = ({history }) => {\r\n   \r\n   const {cartItems,toggleHidden}=useContext(CartContext);\r\n    \r\n   return (\r\n        <div className='cart-dropdown'>\r\n            <div className='cart-items'>\r\n                {cartItems.length ? (\r\n                    cartItems.map(cartItem => (\r\n                        <CartItem key={cartItem.id} item={cartItem} />\r\n                    ))\r\n                ) : (\r\n                        <span className='empty-message'>Your cart is empty</span>\r\n                    )}\r\n            </div>\r\n            <CustomButton\r\n                onClick={() => {\r\n                    history.push('/chekout');\r\n                    toggleHidden();\r\n                }}\r\n            >\r\n                GO TO CHECKOUT\r\n        </CustomButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(CardDropDown);\r\n"]},"metadata":{},"sourceType":"module"}